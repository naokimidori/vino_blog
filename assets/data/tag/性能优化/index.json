{"hash":"0dc8de10d9ac5c8eda7753a46dbdeb50a838796d","data":{"tag":{"title":"性能优化","belongsTo":{"edges":[{"node":{"title":"JS中的防抖和节流","path":"/post/1cc2eedfd0ffb7376fc3b5bbc1e4712c/","date":"2019/08/12","timeToRead":1,"content":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>前言</h2>\n<p>在前端开发中，经常会遇到频繁触发某一事件的情况，如 scroll、mousemove、onchange 等。这种高频率的触发会造成卡顿等现象。\n解决这种问题通常有两种方法：<strong>防抖</strong> 和 <strong>节流</strong></p>\n<p><img src=\"https://s2.ax1x.com/2019/09/04/nZsn0I.gif\" alt=\"没有防抖和节流\"></p>\n<h2 id=\"防抖-debounce\"><a href=\"#%E9%98%B2%E6%8A%96-debounce\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>防抖 debounce</h2>\n<h3 id=\"防抖原理\"><a href=\"#%E9%98%B2%E6%8A%96%E5%8E%9F%E7%90%86\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>防抖原理</h3>\n<blockquote>\n<p>在事件被触发 n 秒后再执行回调，如果在这 n 秒内又被触发，则重新计时。</p>\n</blockquote>\n<p><img src=\"https://s2.ax1x.com/2019/09/04/nZJyX8.png\" alt=\"防抖\"></p>\n<p>示例代码如下:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inp<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h3 id=\"简易版本\"><a href=\"#%E7%AE%80%E6%98%93%E7%89%88%E6%9C%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>简易版本:</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//计时器id</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//清除计时器</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 调用</span>\ninp<span class=\"token punctuation\">.</span><span class=\"token property-access\">oninput</span> <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre>\n<p>好了，一个基础的防抖函数就完成了。\n但这样写有两个问题没有解决：<strong>this 指向</strong> 和 <strong>event 对象</strong></p>\n<h3 id=\"this-指向问题？\"><a href=\"#this-%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98%EF%BC%9F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>this 指向问题？</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//如果输出this， 指向window</span>\ninp<span class=\"token punctuation\">.</span><span class=\"token property-access\">oninput</span> <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"event-对象问题？\"><a href=\"#event-%E5%AF%B9%E8%B1%A1%E9%97%AE%E9%A2%98%EF%BC%9F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>event 对象问题？</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span> <span class=\"token comment\">//计时器id</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//清除计时器</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 调用</span>\ninp<span class=\"token punctuation\">.</span><span class=\"token property-access\">oninput</span> <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>bing<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//输出 undefined</span></code></pre>\n<h3 id=\"完善后的代码\"><a href=\"#%E5%AE%8C%E5%96%84%E5%90%8E%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>完善后的代码</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span> <span class=\"token comment\">//计时器id</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//保留this</span>\n        <span class=\"token keyword\">let</span> _arg <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span> <span class=\"token comment\">//保留event</span>\n\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//清除计时器</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            func<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">,</span> _arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//改变指向</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 调用</span>\ninp<span class=\"token punctuation\">.</span><span class=\"token property-access\">oninput</span> <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>bing<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"实现效果如下图\"><a href=\"#%E5%AE%9E%E7%8E%B0%E6%95%88%E6%9E%9C%E5%A6%82%E4%B8%8B%E5%9B%BE\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>实现效果如下图:</h3>\n<p><img src=\"https://s2.ax1x.com/2019/09/04/nZsxC8.gif\" alt=\"防抖\"></p>\n<h2 id=\"节流-throttle\"><a href=\"#%E8%8A%82%E6%B5%81-throttle\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>节流 throttle</h2>\n<h3 id=\"节流原理\"><a href=\"#%E8%8A%82%E6%B5%81%E5%8E%9F%E7%90%86\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>节流原理</h3>\n<blockquote>\n<p>特定的时间内周期，事件只会执行一次，不管被触发了多少次。如一些抽奖系统等。</p>\n</blockquote>\n<p><img src=\"https://s2.ax1x.com/2019/09/04/nZDyPU.png\" alt=\"节流\"></p>\n<p>节流的实现目前有两种主流方式：<strong>时间戳</strong> 和 <strong>定时器</strong></p>\n<h3 id=\"节流实现\"><a href=\"#%E8%8A%82%E6%B5%81%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>节流实现</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ibox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//节流</span>\n<span class=\"token keyword\">let</span> show <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#show\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    ibox <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#ibox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//shell函数</span>\n    <span class=\"token keyword\">let</span> lastTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> nowTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">-</span> lastTime <span class=\"token operator\">></span> wait<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            fn<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            lastTime <span class=\"token operator\">=</span> nowTime<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    show<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span> <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nibox<span class=\"token punctuation\">.</span><span class=\"token property-access\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>buy<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><img src=\"https://s2.ax1x.com/2019/09/04/nZyPDs.gif\" alt=\"节流\"></p>\n<h2 id=\"相关文章\"><a href=\"#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>相关文章</h2>\n<ol>\n<li><a href=\"https://juejin.im/post/5b8de829f265da43623c4261\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">7 分钟理解 JS 的节流、防抖及使用场景</a></li>\n<li><a href=\"https://juejin.im/post/5931561fa22b9d0058c5b87d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JavaScript 专题之跟着 underscore 学防抖</a></li>\n</ol>\n<hr>\n"}}]}}},"context":{}}