{"hash":"97c054ee66bf0804048bac66282004dce89f4873","data":{"post":{"title":"['1', '2', '3'].map(parseInt) what & why ?","path":"/post/fe8c3bb7091081b7ef7cdd94707ab307/","date":"2019/07/13","timeToRead":1,"tags":[{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"},{"id":"ES6","title":"ES6","path":"/tag/ES6/"}],"content":"<blockquote>\n<p>转自 <a href=\"https://github.com/sisterAn/blog/issues/19\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/sisterAn/blog/issues/19</a> 侵删</p>\n</blockquote>\n<h3 id=\"一道题目引发的问题\"><a href=\"#%E4%B8%80%E9%81%93%E9%A2%98%E7%9B%AE%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>一道题目引发的问题</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [10, NaN, 2, 3, 4]</span></code></pre>\n<h3 id=\"parseint\"><a href=\"#parseint\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>parseInt</h3>\n<p><code class=\"language-text\">parseInt()</code>  函数解析一个字符串参数，并返回一个指定基数的整数 (数学系统的基础)。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> intValue <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> radix<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code class=\"language-text\">string</code>  要被解析的值。如果参数不是一个字符串，则将其转换为字符串(使用 ToString 抽象操作)。字符串开头的空白符将会被忽略。</p>\n<p><code class=\"language-text\">radix</code>  一个介于 2 和 36 之间的整数(数学系统的基础)，表示上述字符串的基数。默认为 10。\n<code class=\"language-text\">返回值</code>  返回一个整数或 NaN</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4 -> converts 100 in base 2 to base 10</span></code></pre>\n<p><strong>注意：</strong>\n在<code class=\"language-text\">radix</code>为 undefined，或者<code class=\"language-text\">radix</code>为 0 或者没有指定的情况下，JavaScript 作如下处理：</p>\n<ul>\n<li>如果字符串 string 以\"0x\"或者\"0X\"开头, 则基数是 16 (16 进制).</li>\n<li>如果字符串 string 以\"0\"开头, 基数是 8（八进制）或者 10（十进制），那么具体是哪个基数由实现环境决定。ECMAScript 5 规定使用 10，但是并不是所有的浏览器都遵循这个规定。因此，永远都要明确给出 radix 参数的值。</li>\n<li>如果字符串 string 以其它任何值开头，则基数是 10 (十进制)。</li>\n</ul>\n<p>更多详见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">parseInt | MDN</a></p>\n<h3 id=\"map\"><a href=\"#map\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>map</h3>\n<p><code class=\"language-text\">map()</code>  方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> new_array <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentValue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// Return element for new_array</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n<p>可以看到<code class=\"language-text\">callback</code>回调函数需要三个参数, 我们通常只使用第一个参数 (其他两个参数是可选的)。\n<code class=\"language-text\">currentValue</code>  是 callback 数组中正在处理的当前元素。\n<code class=\"language-text\">index</code>可选, 是 callback 数组中正在处理的当前元素的索引。\n<code class=\"language-text\">array</code>可选, 是 callback map 方法被调用的数组。\n另外还有<code class=\"language-text\">thisArg</code>可选, 执行 callback 函数时使用的 this 值。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token arrow operator\">=></span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 3, 4]</span></code></pre>\n<p>更多详见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Array.prototype.map() | MDN</a></p>\n<h3 id=\"回到真实的事例上\"><a href=\"#%E5%9B%9E%E5%88%B0%E7%9C%9F%E5%AE%9E%E7%9A%84%E4%BA%8B%E4%BE%8B%E4%B8%8A\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>回到真实的事例上</h3>\n<p>回到我们真实的事例上</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>对于每个迭代<code class=\"language-text\">map</code>, <code class=\"language-text\">parseInt()</code>传递两个参数: <strong>字符串和基数</strong>。\n所以实际执行的的代码是：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>即返回的值分别为：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN, 3 不是二进制</span></code></pre>\n<p>所以：</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 1, NaN, NaN</span></code></pre>\n<p>由此，加里·伯恩哈德例子也就很好解释了，这里不再赘述</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [10, NaN, 2, 3, 4]</span></code></pre>\n<h3 id=\"如何在现实世界中做到这一点\"><a href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8%E7%8E%B0%E5%AE%9E%E4%B8%96%E7%95%8C%E4%B8%AD%E5%81%9A%E5%88%B0%E8%BF%99%E4%B8%80%E7%82%B9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>如何在现实世界中做到这一点</h3>\n<p>如果您实际上想要循环访问字符串数组, 该怎么办？ <code class=\"language-text\">map()</code>然后把它换成数字？使用编号!</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [10, 10, 10, 10, 10]</span></code></pre>\n<hr>\n"}},"context":{}}