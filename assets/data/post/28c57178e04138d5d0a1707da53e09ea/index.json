{"hash":"b37518b001d68aa10baf36bc2360bd3a9bba5ac6","data":{"post":{"title":"高阶函数之map filter reduce","path":"/post/28c57178e04138d5d0a1707da53e09ea/","date":"2019/10/10","timeToRead":2,"tags":[{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"},{"id":"ES6","title":"ES6","path":"/tag/ES6/"}],"content":"<h1 id=\"高阶函数\"><a href=\"#%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>高阶函数</h1>\n<blockquote>\n<p>高阶函数指的是一个函数以函数为参数，或以函数为返回值，或者既以函数为参数又以函数为返回值</p>\n</blockquote>\n<p>高阶函数经常用于：</p>\n<ul>\n<li>抽象或隔离行为、作用，异步控制流程作为回调函数，promises，monads等</li>\n<li>创建可以泛用于各种数据类型的功能</li>\n<li>部分应用于函数参数（偏函数应用）或创建一个柯里化的函数，用于复用或函数复合。</li>\n<li>接受一个函数列表并返回一些由这个列表中的函数组成的复合函数</li>\n</ul>\n<h3 id=\"js一些内置的高阶函数\"><a href=\"#js%E4%B8%80%E4%BA%9B%E5%86%85%E7%BD%AE%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>js一些内置的高阶函数</h3>\n<p><code class=\"language-text\">Array.prototype.map</code>\n<code class=\"language-text\">Array.prototype.filter</code>\n<code class=\"language-text\">Array.prototype.reduce</code></p>\n<h4 id=\"一张图讲清三者区别\"><a href=\"#%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%AE%B2%E6%B8%85%E4%B8%89%E8%80%85%E5%8C%BA%E5%88%AB\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>一张图讲清三者区别</h4>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/18509339-c81a84969495d496.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"区别\"></p>\n<hr>\n<h2 id=\"map\"><a href=\"#map\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>map</h2>\n<blockquote>\n<p>map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果。map 不会改变原数组。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Fluffykins\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"rabbit\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Caro\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"dog\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Hamilton\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"dog\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Harold\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"fish\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Ursula\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"cat\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Jimmy\"</span><span class=\"token punctuation\">,</span> species<span class=\"token operator\">:</span> <span class=\"token string\">\"fish\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n</blockquote>\n<p>// 不使用高阶函数\nvar names = [];\nfor (let i = 0; i &#x3C; animals.length; i++) {\nnames.push(animals[i].name);\n}\nconsole.log(names); //[\"Fluffykins\", \"Caro\", \"Hamilton\", \"Harold\", \"Ursula\", \"Jimmy\"]</p>\n<p>// 使用高阶函数\nvar names = animals.map(x=>x.name);\nconsole.log(names); //[\"Fluffykins\", \"Caro\", \"Hamilton\", \"Harold\", \"Ursula\", \"Jimmy\"]</p>\n<pre class=\"language-text\"><code class=\"language-text\">---\n## filter\n&gt;filter() 方法会创建一个新数组，其中包含所有通过回调函数测试的元素。\nfilter 为数组中的每个元素调用一次 callback 函数， callback 函数返回 true 表示该元素通过测试，保留该元素，false 则不保留。filter 不会改变原数组，它返回过滤后的新数组。\n```javascript\nvar animals = [\n  { name: &quot;Fluffykins&quot;, species: &quot;rabbit&quot; },\n  { name: &quot;Caro&quot;, species: &quot;dog&quot; },\n  { name: &quot;Hamilton&quot;, species: &quot;dog&quot; },\n  { name: &quot;Harold&quot;, species: &quot;fish&quot; },\n  { name: &quot;Ursula&quot;, species: &quot;cat&quot; },\n  { name: &quot;Jimmy&quot;, species: &quot;fish&quot; }\n];\n\n// 不使用高阶函数\nvar dogs = [];\nfor (var i = 0; i &lt; animals.length; i++) {\n  if (animals[i].species === &quot;dog&quot;) dogs.push(animals[i]);\n}\nconsole.log(dogs); \n\n\n// 使用高阶函数\nvar dogs = animals.filter(x =&gt; x.species === &quot;dog&quot;);\nconsole.log(dogs); // {name: &quot;Caro&quot;, species: &quot;dog&quot;} // { name: &quot;Hamilton&quot;, species: &quot;dog&quot; }</code></pre>\n<hr>\n<h2 id=\"reduce\"><a href=\"#reduce\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>reduce</h2>\n<blockquote>\n<p>reduce 方法对调用数组的每个元素执行回调函数，最后生成一个单一的值并返回。 reduce 方法接受两个参数：1）reduce 函数（回调），2）一个可选的 initialValue。\nreduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</p>\n</blockquote>\n<h4 id=\"语法\"><a href=\"#%E8%AF%AD%E6%B3%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>语法</h4>\n<p><code class=\"language-text\">arr.reduce(callback,initialValue)</code></p>\n<h4 id=\"reduce的一些应用场景\"><a href=\"#reduce%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>reduce的一些应用场景</h4>\n<p>1.求和求积</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span>y</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span>x<span class=\"token operator\">+</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> mul <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span>y</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span>x<span class=\"token operator\">*</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span> sum <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//求和，10</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span> mul <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//求乘积，24</span></code></pre>\n<p>2.计算数组中每个元素出现的次数</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tiff'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bruce'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Alice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> nameNum <span class=\"token operator\">=</span> names<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span>cur</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>cur <span class=\"token keyword\">in</span> pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    pre<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword control-flow\">else</span><span class=\"token punctuation\">{</span>\n    pre<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> pre\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>nameNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//{Alice: 2, Bob: 1, Tiff: 1, Bruce: 1}</span></code></pre>\n<p>3.数组去重</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span>cur</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pre<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> pre<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">concat</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword control-flow\">else</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> pre\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// [1, 2, 3, 4]</span></code></pre>\n<p>4.将二维数组转化为一维</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span>cur</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> pre<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">concat</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>newArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 1, 2, 3, 4, 5]</span></code></pre>\n<p>5.将多维数组转化为一维</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">newArr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword control-flow\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span>cur</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span>pre<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">concat</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Array</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isArray</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token function\">newArr</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newArr</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[0, 1, 2, 3, 4, 5, 6, 7]</span></code></pre>\n<p>6.对象里的属性求和</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        subject<span class=\"token operator\">:</span> <span class=\"token string\">'math'</span><span class=\"token punctuation\">,</span>\n        score<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        subject<span class=\"token operator\">:</span> <span class=\"token string\">'chinese'</span><span class=\"token punctuation\">,</span>\n        score<span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        subject<span class=\"token operator\">:</span> <span class=\"token string\">'english'</span><span class=\"token punctuation\">,</span>\n        score<span class=\"token operator\">:</span> <span class=\"token number\">30</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> cur<span class=\"token punctuation\">.</span><span class=\"token property-access\">score</span> <span class=\"token operator\">+</span> prev<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span> <span class=\"token comment\">//60</span></code></pre>\n<p>7.将[1,3,1,4]转为数字1314</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">addDigitValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span>curr<span class=\"token punctuation\">,</span>curIndex<span class=\"token punctuation\">,</span>array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> exponent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>curIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> digitValue <span class=\"token operator\">=</span> curr<span class=\"token operator\">*</span><span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>exponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> prev <span class=\"token operator\">+</span> digitValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> arr6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result7 <span class=\"token operator\">=</span> arr6<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span>addDigitValue<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result7'</span><span class=\"token punctuation\">,</span>result7<span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"参考链接\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>参考链接</h3>\n<p><a href=\"https://juejin.im/post/5cb30e2ce51d456e63760450#heading-9\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://juejin.im/post/5cb30e2ce51d456e63760450#heading-9</a>\n<a href=\"https://www.cnblogs.com/chengxs/p/11088238.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.cnblogs.com/chengxs/p/11088238.html</a></p>\n"}},"context":{}}