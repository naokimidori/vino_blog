{"hash":"b37518b001d68aa10baf36bc2360bd3a9bba5ac6","data":{"post":{"title":"JavaScript基础整理1","path":"/post/ea8e0682b66cfb77d3f66a5a333ce417/","date":"2019/11/20","timeToRead":2,"tags":[{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"}],"content":"<h3 id=\"类型转换\"><a href=\"#%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>类型转换</h3>\n<ul>\n<li>强制类型转换</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span>强制转换</code></pre>\n<p>同理：</p>\n<blockquote>\n<p>Boolean(value)：把参数值转换为布尔型值\nNumber(value)：把参数值转换为数字\nparseFloat/parseInt：把参数值转换为浮点数/整数\nString(value)：把参数值转换为字符串\ntoString(value)：把参数值转换为字符串</p>\n</blockquote>\n<ul>\n<li>隐式(自动)转换</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">--</span> <span class=\"token string\">'24'</span><span class=\"token punctuation\">;</span>\nb <span class=\"token operator\">--</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span></code></pre>\n<p>自动转换表</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">值（value）</th>\n<th>字符串操作环境</th>\n<th>数字运算环境</th>\n<th>逻辑运算环境</th>\n<th>对象操作环境</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">undefined</td>\n<td>\"undefined\"</td>\n<td>NaN</td>\n<td>false</td>\n<td>Error</td>\n</tr>\n<tr>\n<td align=\"left\">null</td>\n<td>\"null\"</td>\n<td>0</td>\n<td>false</td>\n<td>Error</td>\n</tr>\n<tr>\n<td align=\"left\">非空字符串</td>\n<td>不转换</td>\n<td>字符串对应的数字值NaN</td>\n<td>true</td>\n<td>String</td>\n</tr>\n<tr>\n<td align=\"left\">空字符串</td>\n<td>不转换</td>\n<td>0</td>\n<td>false</td>\n<td>String</td>\n</tr>\n<tr>\n<td align=\"left\">0</td>\n<td>\"0\"</td>\n<td>不转换</td>\n<td>false</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">NaN</td>\n<td>\"NaN\"</td>\n<td>不转换</td>\n<td>false</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">Infinity</td>\n<td>\"Infinity\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">Number.POSITIVE_INFINITY</td>\n<td>\"Infinity\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">Number.NEGATIVE_INFINITY</td>\n<td>\"-Infinity\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">-Infinity</td>\n<td>\"-Infinity\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">Number.MAX_VALUE</td>\n<td>\"1.7976931348623157e+308\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">Number.MIN_VALUE</td>\n<td>\"5e-324\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">其他所有数字</td>\n<td>\"数字的字符串值\"</td>\n<td>不转换</td>\n<td>true</td>\n<td>Number</td>\n</tr>\n<tr>\n<td align=\"left\">true</td>\n<td>\"true\"</td>\n<td>1</td>\n<td>不转换</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td align=\"left\">false</td>\n<td>\"false\"</td>\n<td>0</td>\n<td>不转换</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td align=\"left\">对象</td>\n<td>toString()</td>\n<td>valueOf() 或 toString() 或 NaN</td>\n<td>true</td>\n<td>不转换</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"javascript的作用域scope及作用域链指什么？\"><a href=\"#javascript%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9Fscope%E5%8F%8A%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E6%8C%87%E4%BB%80%E4%B9%88%EF%BC%9F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>JavaScript的作用域(scope)及作用域链指什么？</h3>\n<p>简单来说，作用域就是变量与函数的可访问范围，即作用域控制着变量与函数的可见性和生命周期。</p>\n<p>js的作用域是靠函数来形成的，也就是说一个函数的变量在函数外不可以访问。</p>\n<ul>\n<li>\n<p>全局作用域</p>\n<ul>\n<li>函数外定义的变量拥有全局作用域</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 24</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 8</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ncaught ReferenceError: a is not defined</span></code></pre>\n<ul>\n<li>未定义直接赋值的变量自动提升为全局作用域</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  a <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 24</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 8</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 24 提升</span></code></pre>\n<ul>\n<li>window对象的属性拥有全局作用域</li>\n</ul>\n</li>\n<li>\n<p>局部作用域</p>\n<p>局部作用域一般只在固定的代码片段内可访问到，最常见的例如函数内部，所以在一些地方会把这种作用域成为函数作用域。</p>\n<p>局部作用域的特性，外部无法访问。如全局作用域第一个代码片段中的<code class=\"language-text\">console.log(a)</code>会提示报错。</p>\n</li>\n<li>\n<p>ES6的块级作用域</p>\n<ul>\n<li>ES5只有全局作用域和函数作用域，没有块级作用域，会带来下面问题：</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 变量提升导致内层变量可能会覆盖外层变量</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 用来计数的循环变量泄漏位全局变量</span>\n<span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 10 个 10</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre>\n<ul>\n<li>ES6的块级作用域let/const</li>\n</ul>\n</li>\n<li>\n<p>作用域链</p>\n<p>通俗地讲，当声明一个函数时，局部作用域一级一级向上包起来，就是作用域链。</p>\n<ol>\n<li>当执行函数时，总是先从函数内部找寻局部变量</li>\n<li>如果内部找不到（函数的局部作用域没有），则会向创建函数的作用域（声明函数的作用域）寻找，依次向上</li>\n</ol>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre>\n</li>\n</ul>\n<h3 id=\"闭包\"><a href=\"#%E9%97%AD%E5%8C%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>闭包</h3>\n<ul>\n<li>\n<p>概念</p>\n<ul>\n<li><strong>闭包函数：</strong>声明在一个函数中的函数，叫做闭包函数。</li>\n<li><strong>闭包：</strong>内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。</li>\n<li>当函数可以记住并访问所在的词法作用域时，就产生了闭包 <strong>（你不知道的JavaScript）</strong></li>\n<li>闭包是指有权访问另一个函数作用域中的变量的函数  <strong>(JavaScript高级程序设计)</strong></li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 示例1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n  <span class=\"token keyword\">function</span> <span class=\"token function\">innerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> innerFn<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> inner <span class=\"token operator\">=</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//每次外部函数执行的时候，外部函数的地址不同，都会重新创建一个新的地址</span>\n<span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1</span>\n<span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2</span>\n<span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3</span>\n<span class=\"token keyword\">var</span> inner2 <span class=\"token operator\">=</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">inner2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">inner2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n<span class=\"token function\">inner2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 示例2</span>\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">innnerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n       i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n       <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> innnerFn<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> inner1 <span class=\"token operator\">=</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> inner2 <span class=\"token operator\">=</span> <span class=\"token function\">outerFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">inner1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1s</span>\n<span class=\"token function\">inner2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2</span>\n<span class=\"token function\">inner1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 3</span>\n<span class=\"token function\">inner2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 4</span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 示例3</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">m1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token function\">m1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//2</span>\n<span class=\"token function\">m1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//2</span>\n<span class=\"token function\">m1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//2</span>\n \n<span class=\"token keyword\">var</span> m2 <span class=\"token operator\">=</span> <span class=\"token function\">m1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">m2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//2</span>\n<span class=\"token function\">m2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//3</span>\n<span class=\"token function\">m2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//4</span></code></pre>\n<ul>\n<li>闭包的实际使用</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 计时器</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello 闭包'</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// jQuery</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">doSomeing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">selector<span class=\"token punctuation\">,</span>doWhat</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>doWhat<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSomeing</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#dom1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'dowhat'</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 防抖</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//计时器id</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//清除计时器</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token spread operator\">...</span>\n<span class=\"token spread operator\">...</span>\n<span class=\"token spread operator\">...</span></code></pre>\n<ul>\n<li>闭包实操题</li>\n</ul>\n<blockquote>\n<p>编写一个方法，实现：</p>\n<p>var addSix = createBase(6);</p>\n<p> addSix(10); // 返回 16 </p>\n<p>addSix(21); // 返回 27</p>\n</blockquote>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">createBase</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> num <span class=\"token operator\">+</span> n<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> addSix <span class=\"token operator\">=</span> <span class=\"token function\">createBase</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">addSix</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 16 </span>\n<span class=\"token function\">addSix</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回 27</span></code></pre>\n"}},"context":{}}